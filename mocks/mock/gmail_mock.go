// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/google/gmail.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gmail "google.golang.org/api/gmail/v1"
	googleapi "google.golang.org/api/googleapi"
)

// MockGmailApi is a mock of GmailApi interface.
type MockGmailApi struct {
	ctrl     *gomock.Controller
	recorder *MockGmailApiMockRecorder
}

// MockGmailApiMockRecorder is the mock recorder for MockGmailApi.
type MockGmailApiMockRecorder struct {
	mock *MockGmailApi
}

// NewMockGmailApi creates a new mock instance.
func NewMockGmailApi(ctrl *gomock.Controller) *MockGmailApi {
	mock := &MockGmailApi{ctrl: ctrl}
	mock.recorder = &MockGmailApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGmailApi) EXPECT() *MockGmailApiMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockGmailApi) Do(opts ...googleapi.CallOption) (*gmail.ListMessagesResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Do", varargs...)
	ret0, _ := ret[0].(*gmail.ListMessagesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockGmailApiMockRecorder) Do(opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockGmailApi)(nil).Do), opts...)
}

// PageToken mocks base method.
func (m *MockGmailApi) PageToken(pageToken string) *gmail.UsersMessagesListCall {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PageToken", pageToken)
	ret0, _ := ret[0].(*gmail.UsersMessagesListCall)
	return ret0
}

// PageToken indicates an expected call of PageToken.
func (mr *MockGmailApiMockRecorder) PageToken(pageToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PageToken", reflect.TypeOf((*MockGmailApi)(nil).PageToken), pageToken)
}

// Q mocks base method.
func (m *MockGmailApi) Q(q string) *gmail.UsersMessagesListCall {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Q", q)
	ret0, _ := ret[0].(*gmail.UsersMessagesListCall)
	return ret0
}

// Q indicates an expected call of Q.
func (mr *MockGmailApiMockRecorder) Q(q interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Q", reflect.TypeOf((*MockGmailApi)(nil).Q), q)
}
